{"version":3,"names":["cov_do8euuwcp","actualCoverage","s","core_1","require","session_service_1","user_nav_component_1","router_1","sweet_alert_service_1","operators_1","rxjs_1","user_service_1","functions_1","ProfileComponent","constructor","router","sweetAlertService","serverUser","f","username","ngOnInit","usuario","SessionService","user","goBack","directed","tipoUsuario","borrarCuenta","b","confirmBox","then","result","isConfirmed","delete","id","pipe","map","response","simpleAlert","catchError","error","errorMessage","getErrorMessage","showError","of","subscribe","navigate","isDismissed","exports","tslib_1","__decorate","Component","selector","standalone","imports","UserNavComponent","template","providers","SweetAlertService","UserService"],"sources":["C:\\Users\\Samsung\\Desktop\\HardwareHaven\\Frontend\\HardwareHaven\\src\\app\\pages\\perfil\\perfil\\perfil.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { SessionService } from '../../../core/services/share/session.service';\r\nimport { UserNavComponent } from '../../../shared/user-nav/user-nav.component';\r\nimport { Router } from '@angular/router';\r\nimport { SweetAlertService } from '../../../core/services/notifications/sweet-alert.service';\r\nimport { catchError, map, share } from 'rxjs/operators';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { UserService } from '../../../core/services/entities/user.service';\r\nimport { directed, getErrorMessage } from '../../../shared/functions/functions';\r\n\r\n\r\n@Component({\r\n  selector: 'app-perfil',\r\n  standalone: true,\r\n  imports: [UserNavComponent],\r\n  templateUrl: './perfil.component.html',\r\n  styleUrl: './perfil.component.css',\r\n  providers:[SweetAlertService, UserService]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\npublic usuario:any;\r\npublic username: string = 'Usuario123';\r\n\r\n\r\n  constructor(private router: Router, private sweetAlertService: SweetAlertService, private serverUser: UserService){}\r\n  ngOnInit(): void {\r\n  this.usuario = SessionService.user;\r\n}\r\n\r\ngoBack() {\r\n  directed(this.usuario.tipoUsuario, this.router)\r\n}\r\n\r\nborrarCuenta(){\r\n  if(this.usuario){\r\n  this.sweetAlertService.confirmBox('¿Estás seguro?', 'No podrás revertir esta acción.').then((result) => {\r\n    if (result.isConfirmed) {\r\n      this.serverUser.delete(this.usuario.id).pipe(\r\n        map((response: any) => {\r\n          if (response) {\r\n            this.sweetAlertService.simpleAlert(\"Su cuenta fue eliminada, gracias por comprar en Hardware Haven\");\r\n            return response;\r\n          } else {\r\n\r\n            return null;\r\n          }\r\n        }),\r\n        catchError((error) => {\r\n          const errorMessage = getErrorMessage(error);\r\n          this.sweetAlertService.showError(errorMessage);\r\n          return of(null);\r\n        })\r\n      ).subscribe((usuario: any) => {\r\n        if (usuario) {\r\n          this.usuario = usuario;\r\n          this.router.navigate(['/home']);\r\n        }\r\n      });\r\n    } else if (result.isDismissed) {\r\n\r\n    }\r\n  });\r\n}\r\n}\r\n}\r\n"],"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","ignoreList":[]}