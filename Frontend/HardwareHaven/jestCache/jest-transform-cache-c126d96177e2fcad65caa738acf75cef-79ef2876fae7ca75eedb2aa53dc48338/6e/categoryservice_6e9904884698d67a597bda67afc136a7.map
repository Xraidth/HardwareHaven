{"version":3,"names":["cov_jfxydkca1","actualCoverage","s","core_1","require","http_1","CategoryService","constructor","http","f","baseUrl","getAll","get","getOne","id","create","body","headers","HttpHeaders","post","delete","update","put","exports","tslib_1","__decorate","Injectable","providedIn"],"sources":["C:\\Users\\Samsung\\Desktop\\HardwareHaven\\Frontend\\HardwareHaven\\src\\app\\core\\services\\entities\\category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n  private baseUrl = 'http://localhost:3000/api/categoria/';\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n  getAll(){\r\n    return this.http.get(`${this.baseUrl}getAll`);\r\n  }\r\n  getOne(id: number) {\r\n    return this.http.get(`${this.baseUrl}getOne/${id}`);\r\n  }\r\n\r\n  create(body:{descripcion: string}){\r\n    const headers= new HttpHeaders({'Content-Type': 'application/json; charset=UTF-8'});\r\n    return this.http.post(`${this.baseUrl}insert`, body);\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete(`${this.baseUrl}deleteOne/${id}`);\r\n  }\r\n\r\n  update( id: number, body:{descripcion: string}){\r\n    const headers= new HttpHeaders({'Content-Type': 'application/json; charset=UTF-8'});\r\n    return this.http.put(`${this.baseUrl}update/${id}`, body);\r\n  }\r\n}\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}