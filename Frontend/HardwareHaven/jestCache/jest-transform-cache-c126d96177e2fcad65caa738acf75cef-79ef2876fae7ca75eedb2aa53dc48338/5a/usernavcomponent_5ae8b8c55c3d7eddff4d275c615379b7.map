{"version":3,"names":["cov_15gublk268","actualCoverage","s","core_1","require","router_1","sweet_alert_service_1","session_service_1","user_service_1","http_1","operators_1","rxjs_1","functions_1","UserNavComponent","constructor","swa","serverUser","router","f","userName","isDropdownOpen","ngOnInit","usuario","b","truncateString","name","str","maxLength","length","slice","configurarCuenta","credenciales","mostrarConfigurarCuenta","update","id","newPassword","oldPassword","newUserName","newEmail","newUserType","pipe","catchError","error","errorMessage","getErrorMessage","showError","of","subscribe","next","response","data","e","errores","errors","message","mensajeErrores","join","toggleDropdown","cerrarSesion","SessionService","deleteSession","Input","exports","tslib_1","__decorate","Component","selector","standalone","imports","RouterModule","HttpClientModule","template","providers","UserService"],"sources":["C:\\Users\\Samsung\\Desktop\\HardwareHaven\\Frontend\\HardwareHaven\\src\\app\\shared\\user-nav\\user-nav.component.ts"],"sourcesContent":["import { Component, Input, OnInit} from '@angular/core';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { SweetAlertService } from '../../core/services/notifications/sweet-alert.service';\r\nimport { SessionService } from '../../core/services/share/session.service';\r\nimport { UserService } from '../../core/services/entities/user.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { getErrorMessage } from '../functions/functions';\r\n@Component({\r\n  selector: 'app-user-nav',\r\n  standalone: true,\r\n  imports: [RouterModule, HttpClientModule],\r\n  templateUrl: './user-nav.component.html',\r\n  styleUrl: './user-nav.component.css',\r\n  providers: [UserService]\r\n})\r\nexport class UserNavComponent implements OnInit {\r\n\r\n\r\n  @Input() usuario:any;\r\n  public userName:string= \"Usuario\";\r\n  isDropdownOpen = false;\r\n  constructor(private swa:SweetAlertService,\r\n    private serverUser: UserService,\r\n    private router: Router\r\n  ){}\r\n\r\n  ngOnInit(): void {\r\n    this.userName = this.usuario ? this.truncateString(this.usuario.name) : \"Usuario\";\r\n  }\r\n\r\n  truncateString(str: string, maxLength: number = 8): string {\r\n    if (str.length > maxLength) {\r\n      return str.slice(0, maxLength) + '...';\r\n    } else {\r\n      return str;\r\n    }\r\n  }\r\n\r\n\r\n  async configurarCuenta(): Promise<void> {\r\n    const credenciales = await this.swa.mostrarConfigurarCuenta(this.usuario);\r\n    if (credenciales) {\r\n      this.serverUser.update(this.usuario.id, {\r\n        newPassword: credenciales.newPassword,\r\n        oldPassword: credenciales.oldPassword,\r\n        newUserName: credenciales.newUserName,\r\n        newEmail: credenciales.newEmail,\r\n        newUserType: credenciales.newUserType\r\n      }).pipe(\r\n        catchError((error) => {\r\n\r\n        const errorMessage = getErrorMessage(error);\r\n        this.swa.showError(errorMessage);\r\n          return of(null);\r\n        })\r\n      ).subscribe(\r\n    {\r\n    next:\r\n      (response: any) => {\r\n      if (response?.data) {\r\n        this.usuario =  response.data\r\n\r\n      }\r\n    },\r\n    error: (e) => {\r\n      const errores = e.error?.errors || [];\r\nconst message = e.error?.message || [];\r\n      const mensajeErrores = errores.join(', ');\r\n      this.swa.showError(mensajeErrores +\", \"+ message);\r\n  }\r\n\r\n    }\r\n\r\n    );\r\n    }\r\n  }\r\n\r\n\r\n\r\n  toggleDropdown() {\r\n    this.isDropdownOpen = !this.isDropdownOpen;\r\n  }\r\n\r\n  cerrarSesion(){\r\n    SessionService.deleteSession();\r\n  }\r\n}\r\n"],"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","ignoreList":[]}